{"version":3,"sources":["Jenkins.js","AsOf.js","Summarize.js","ComputerDisplay.js","QueueDisplay.js","BuildHistoryDisplay.js","GitHubStatusDisplay.js","PerfHistoryDisplay.js","JobCorrelationHeatmap.js","GitHubActionsDisplay.js","App.js","registerServiceWorker.js","index.js"],"names":["jenkins","s","url","options","a","undefined","axios","get","params","then","response","r","catch","error","data","urls","requests","map","err","all","result","this","v","AsOf","props","updateStatus","currentTime","updateTime","interval","connectedIn","timeString","Date","toLocaleTimeString","className","summarize_job","job","replace","summarize_date","timestamp","date","toLocaleDateString","toLocaleString","hour","minute","hour12","month","day","weekday","summarize_ago","today","seconds","hours","Math","floor","minutes","time","String","seconds2time","summarize_url","m","RegExp","exec","centsPerHour","osx","master","packet","rocm","centsToDollars","x","style","currency","ComputerDisplay","state","computer","update","setInterval","bind","clearInterval","setState","tree","Map","forEach","c","k","n","node","displayName","test","assignedLabels","some","l","name","classify_node","busy","total","offline","idle","set","totalCost","perCost","rows","entries","sort","kv","cost","key","busy_nodes","filter","executors","length","currentExecutable","b","running_rows","executable","href","running_map","task","cumulative_time","delta_ago","colSpan","Component","QueueDisplay","items","queue","why_map","q","why","summarize_why","why_rows","why_v","textAlign","paddingRight","task_map","task_rows","slice","task_v","width","textOverflow","maxWidth","overflow","size","jobs_on_pr","binary_and_smoke_tests_on_pr","is_success","is_failure","getJobName","subBuild","baseJobName","jobName","BuildHistoryDisplay","initialState","prefs_str","localStorage","getItem","prefs","JSON","parse","builds","known_jobs","showStale","username","showNotifications","Notification","permission","requestPermission","prevProps","setItem","stringify","get_github_commit_statuses","collect_known_jobs_set","compareFun","y","sx","e","startsWith","sy","topBuild","subBuilds","go","build","_class","known_jobs_set","add","add_jobs","jobs","index","commitId","job_name","github_commit_statuses","hasOwnProperty","duration","status","build_url","commit","i","changeSet","push","batch_get","request","depth","allBuilds","Set","props_mode","mode","Object","keys","endsWith","includes","found","values","sb_map","collect_jobs_from_github_status","still_unknown_set","consecutive_failure_count","sb","has","count","delete","body","known_jobs_head","durationScale","d3","rangeRound","domain","seen_prs","unknownCost","inProgressCost","status_cols","j","cell","dur","parse_duration","this_cost","ceil","perf_report","cellHref","link","target","alt","role","color","aria-label","is_aborted","is_pending","overlay","mouseLeaveDelay","placement","destroyTooltipOnHide","fontFamily","padding","renderCauses","defaultCause","actions","action","causes","cause","shortDescription","pull_link","pull_id","isRebuild","isPullRequest","upstreamProject","author","desc","stale","find","parameters","param","value","getPullParams","title","number","match","getPushedBy","reverse","comment","renderPullRequestNumber","msg","whenString","height","type","checked","onChange","htmlFor","backgroundColor","position","zIndex","nightly_run_on_pr","objToStrMap","obj","strMap","showServiceJobs","jobNameFilter","branch","build_prefix","url_prefix","commits","id","console","log","is_nightly","isDockerJob","isGCJob","visible_jobs","shouldShowJob","visible_jobs_head","is_skipped","is_infra_failure","message","split","ROUND_PRECISION","round_float","mean","round","PerfHistoryDisplay","indexes","run","relpath","standard_benchmark","benchmark_index","benchmark","build_benchmark_mean","build_benchmark_index","prev_mean","pytorch_version","delta","colkey","prev_delta","result_icon","JobCorrelationHeatmap","all_jobs","passes","seen_names","correlationMatrix","addFailure","failure1","failure2","failures","indexOf","job_names","fullMatrix","name1","row","name2","base","fetch","cache","text","job_index","promises","json","Promise","allSettled","correlations","correlateJobs","model","defaultTooltipTemplate","theme","background","label","el","document","getElementById","innerHTML","usageStatistics","xAxis","formatter","yAxis","tooltip","template","tooltipTemplate","categories","series","Chart","heatmapChart","GitHubActionsDisplay","actions_statuses","dates","last_updated","item","data_series","lineChart","Status","Build","query","URLSearchParams","window","location","search","Build1","Build2","BuildRoute","Route","exact","path","component","Build1Route","Build2Route","TorchBenchRoute","App","basename","Link","to","trigger","Redirect","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","URL","process","origin","addEventListener","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2a401ae0.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport class Jenkins {\n  url(s) {\n    return \"https://ci.pytorch.org/jenkins/\" + s + \"/api/json\";\n  }\n  link(s) {\n    return \"https://ci.pytorch.org/jenkins/\" + s;\n  }\n\n  async get(url, options) {\n    if (options === undefined) options = {};\n    var r;\n    await axios\n      .get(url, { params: options })\n      .then((response) => {\n        r = response;\n      })\n      .catch((error) => {\n        // console.log(\"error.response: \", error.response)\n      });\n    if (typeof r !== \"undefined\") {\n      return r.data;\n    } else {\n      return null;\n    }\n  }\n\n  async batch_get(urls, options) {\n    if (options === undefined) options = {};\n    let r;\n    let requests = urls.map((url) => {\n      return axios.get(url, { params: options }).then(\n        (response) => ({ response }),\n        (err) => ({ err })\n      );\n    });\n\n    await axios\n      .all(requests)\n      .then((response) => {\n        r = response;\n      })\n      .catch((error) => {\n        // console.log(\"error.response: \", error.response)\n      });\n    if (typeof r !== \"undefined\") {\n      return r.map((result) => {\n        if (result.response) {\n          return result.response.data;\n        }\n        return null;\n      });\n    } else {\n      return null;\n    }\n  }\n\n  async computer(options) {\n    return this.get(this.url(\"computer\"), options);\n  }\n  async queue(options) {\n    return this.get(this.url(\"queue\"), options);\n  }\n  async job(v, options) {\n    return this.get(this.url(\"job/\" + v), options);\n  }\n}\n\nconst jenkins = new Jenkins();\nexport default jenkins;\n","import React, { Fragment } from \"react\";\n\nexport default function AsOf(props) {\n  const updateStatus =\n    props.currentTime - props.updateTime > props.interval ? (\n      \"disconnected\"\n    ) : (\n      <Fragment>connected in {props.connectedIn}ms</Fragment>\n    );\n  const timeString =\n    props.updateTime - new Date(0) === 0 ? (\n      <Fragment>pending</Fragment>\n    ) : (\n      <Fragment>\n        as of {props.updateTime.toLocaleTimeString()}; {updateStatus}\n      </Fragment>\n    );\n  return <span className={updateStatus}>({timeString})</span>;\n}\n","export function summarize_job(job) {\n  return job\n    .replace(/^pytorch-/, \"\")\n    .replace(/-trigger$/, \"\")\n    .replace(/^private\\//, \"\")\n    .replace(/^ccache-cleanup-/, \"\")\n    .replace(/_ci\\/circleci: /, \"\")\n    .replace(/AAA_/, \"\");\n}\n\nexport function summarize_date(timestamp) {\n  const date = new Date(timestamp);\n  const today = new Date();\n  if (today.toLocaleDateString() === date.toLocaleDateString()) {\n    return date.toLocaleString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true,\n    });\n  } else {\n    return date.toLocaleString(\"en-US\", {\n      month: \"short\",\n      day: \"numeric\",\n      weekday: \"short\",\n    });\n  }\n}\n\n// https://stackoverflow.com/questions/6312993/javascript-seconds-to-time-string-with-format-hhmmss\nexport function seconds2time(seconds) {\n  let hours = Math.floor(seconds / 3600);\n  let minutes = Math.floor((seconds - hours * 3600) / 60);\n  seconds = seconds - hours * 3600 - minutes * 60;\n  let time = \"\";\n\n  if (hours !== 0) {\n    time = hours + \":\";\n  }\n  if (minutes !== 0 || time !== \"\") {\n    minutes = minutes < 10 && time !== \"\" ? \"0\" + minutes : String(minutes);\n    time += minutes + \":\";\n  }\n  if (time === \"\") {\n    time = seconds + \"s\";\n  } else {\n    time += seconds < 10 ? \"0\" + seconds : String(seconds);\n  }\n  return time;\n}\n\nexport function summarize_ago(timestamp) {\n  const date = new Date(timestamp);\n  const today = new Date();\n  return seconds2time(Math.floor((today - date) / 1000));\n}\n\nexport function summarize_project(project) {\n  return project.replace(/-builds$/, \"\");\n}\n\nexport function summarize_url(url) {\n  let m;\n  if (\n    (m = RegExp(\n      \"^https://ci\\\\.pytorch\\\\.org/jenkins/job/([^/]+)/job/([^/]+)/\"\n    ).exec(url)) !== null\n  ) {\n    return summarize_project(m[1]) + \"/\" + summarize_job(m[2]);\n  }\n  if (\n    (m = RegExp(\"https://ci\\\\.pytorch\\\\.org/jenkins/job/([^/]+)/\").exec(\n      url\n    )) !== null\n  ) {\n    return m[1];\n  }\n  return url;\n}\n\n// Last updated 2018-03-01\nexport const centsPerHour = {\n  \"linux-cpu\": 17, // c5.xlarge\n  \"linux-bigcpu\": 68, // c5.4xlarge\n  \"linux-gpu\": 228, // g3.8xlarge\n  \"linux-tc-gpu\": 228, // g3.8xlarge\n  \"linux-multigpu\": 456, // g3.16xlarge\n  \"linux-cpu-ccache\": 17, // c5.xlarge\n  \"win-cpu\": 34, // c5.2xlarge\n  \"win-gpu\": 114, // g3.4xlarge\n  osx: 13900 / 30 / 24, // MacStadium mini i7 250 elite\n  master: 17, // c5.xlarge\n  packet: 40, // ???? Packet server ???\n  rocm: 0, // we don't pay for it\n  \"tc-gpu\": 114, // g3.4xlarge\n};\n\nexport function centsToDollars(x) {\n  if (x === undefined) return \"?\";\n  // I feel a little dirty resorting to floating point math\n  // here...\n  return (x / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  });\n}\n","import React, { Component } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport AsOf from \"./AsOf.js\";\nimport {\n  summarize_ago,\n  summarize_url,\n  centsToDollars,\n  centsPerHour,\n} from \"./Summarize.js\";\n\nexport default class ComputerDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      computer: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      connectedIn: 0,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n    const data = await jenkins.computer({\n      tree: `computer[\n                offline,\n                idle,\n                displayName,\n                assignedLabels[name],\n                executors[\n                  currentExecutable[\n                    timestamp,\n                    estimatedDuration,\n                    url,\n                    building\n                  ],\n                  idle\n                ]\n              ]`.replace(/\\s+/g, \"\"),\n    });\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    this.setState(data);\n  }\n  render() {\n    function classify_node(n) {\n      const node = n.displayName;\n      if (/^c5.xlarge-i-.*$/.test(node)) {\n        return \"linux-cpu\";\n      }\n      if (/^c5.4xlarge-i-.*$/.test(node)) {\n        return \"linux-bigcpu\";\n      }\n      if (/^g3.8xlarge-i-.*$/.test(node)) {\n        if (n.assignedLabels.some((l) => l.name === \"tc_gpu\")) {\n          return \"linux-tc-gpu\";\n        } else {\n          return \"linux-gpu\";\n        }\n      }\n      if (/^g3.16xlarge-i-.*$/.test(node)) {\n        return \"linux-multigpu\";\n      }\n      if (/^worker-c5-xlarge-.*$/.test(node)) {\n        return \"linux-cpu-ccache\";\n      }\n      if (/^worker-macos-high-sierra-.*$/.test(node)) {\n        return \"osx\";\n      }\n      if (/^worker-win-c5.2xlarge-i-.*$/.test(node)) {\n        return \"win-cpu\";\n      }\n      if (/^worker-win-g3.4xlarge-i-.*$/.test(node)) {\n        return \"win-gpu\";\n      }\n      if (/^worker-osuosl-ppc64le-cpu-.*$/.test(node)) {\n        return \"ppc\";\n      }\n      if (/^worker-packet-type-1-.*$/.test(node)) {\n        return \"packet\";\n      }\n      if (/^jenkins-worker-rocm-.*$/.test(node)) {\n        return \"rocm\";\n      }\n      if (/^worker-g3-4xlarge-.*$/.test(node)) {\n        return \"tc-gpu\";\n      }\n      return node;\n    }\n\n    const map = new Map();\n    this.state.computer.forEach((c) => {\n      const k = classify_node(c);\n      let v = map.get(k);\n      if (v === undefined) v = { busy: 0, total: 0 };\n      if (!c.offline) {\n        v.total++;\n        if (!c.idle) v.busy++;\n      }\n      map.set(k, v);\n    });\n\n    let totalCost = 0;\n    map.forEach((v, k) => {\n      const perCost = centsPerHour[k];\n      if (perCost !== undefined) {\n        v.totalCost = perCost * v.total;\n        totalCost += v.totalCost;\n      }\n    });\n\n    const rows = [...map.entries()].sort().map((kv) => {\n      const cost = centsToDollars(kv[1].totalCost);\n      return (\n        <tr key={kv[0]}>\n          <th>{kv[0]}</th>\n          <td>\n            {kv[1].busy} / {kv[1].total}\n          </td>\n          <td className=\"ralign\">{cost}/hr</td>\n        </tr>\n      );\n    });\n\n    const busy_nodes = this.state.computer.filter(\n      (c) =>\n        !c.idle &&\n        c.displayName !== \"master\" &&\n        c.executors.length > 0 &&\n        c.executors[0].currentExecutable\n    );\n    busy_nodes.sort(\n      (a, b) =>\n        a.executors[0].currentExecutable.timestamp -\n        b.executors[0].currentExecutable.timestamp\n    );\n    const running_rows = busy_nodes.map((c) => {\n      const executable = c.executors[0].currentExecutable;\n      return (\n        <tr key={c.displayName}>\n          <td className=\"left-cell\">{summarize_ago(executable.timestamp)}</td>\n          <td>\n            <a href={executable.url}>{summarize_url(executable.url)}</a>\n          </td>\n        </tr>\n      );\n    });\n\n    const running_map = new Map();\n    busy_nodes.forEach((c) => {\n      const executable = c.executors[0].currentExecutable;\n      const task = summarize_url(executable.url);\n      let v = running_map.get(task);\n      if (v === undefined) {\n        v = { total: 0, cumulative_time: 0 };\n        running_map.set(task, v);\n      }\n      v.total++;\n\n      function delta_ago(timestamp) {\n        const date = new Date(timestamp);\n        const today = new Date();\n        return (today - date) / 1000;\n      }\n      v.cumulative_time += delta_ago(executable.timestamp);\n    });\n\n    /*\n    const running_summary = [...running_map.entries()].sort((a, b) => b[1].total - a[1].total).map(task_v => {\n      const task = task_v[0];\n      const v = task_v[1];\n      return <tr key={task}><td style={{textAlign: \"right\", paddingRight: 15}}>{v.total}</td><th>{task}</th></tr>\n    });\n\n    const cumulative_running_time_summary = [...running_map.entries()].sort((a, b) => b[1].cumulative_time - a[1].cumulative_time).map(task_v => {\n      const task = task_v[0];\n      const v = task_v[1];\n      return <tr key={task}><td style={{textAlign: \"right\", paddingRight: 15}}>{seconds2time(Math.floor(v.cumulative_time))}</td><th>{task}</th></tr>\n    });\n    */\n\n    return (\n      <div>\n        <h2>\n          Computers{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n            connectedIn={this.state.connectedIn}\n          />\n        </h2>\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                <table>\n                  <tbody>{rows}</tbody>\n                  <tfoot>\n                    <tr>\n                      <td></td>\n                      <td className=\"ralign\" colSpan=\"2\">\n                        {centsToDollars(totalCost * 24 * 30)}/mo\n                      </td>\n                    </tr>\n                  </tfoot>\n                </table>\n              </td>\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>{running_rows}</tbody>\n                </table>\n              </td>\n              {/*\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>\n                    {running_summary}\n                  </tbody>\n                </table>\n              </td>\n              <td className=\"right-cell\">\n                <table>\n                  <tbody>\n                    {cumulative_running_time_summary}\n                  </tbody>\n                </table>\n              </td>\n              */}\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport AsOf from \"./AsOf.js\";\nimport { summarize_url } from \"./Summarize.js\";\n\nexport default class QueueDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      connectedIn: 0,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n    const data = await jenkins.queue();\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    this.setState(data);\n  }\n  render() {\n    function summarize_why(why) {\n      return why\n        .replace(/^Waiting for next available executor on/, \"Needs\")\n        .replace(/docker&&cpu&&ccache/, \"linux-cpu-ccache\")\n        .replace(/[^ ]+cpu_ccache.+/, \"linux-cpu-ccache\")\n        .replace(/docker&&cpu&&!ccache/, \"linux-cpu\")\n        .replace(/docker&&cpu/, \"linux-cpu-any\")\n        .replace(/docker&&gpu/, \"linux-gpu\")\n        .replace(/docker&&bigcpu/, \"linux-bigcpu\")\n        .replace(/windows&&cpu/, \"windows-cpu\")\n        .replace(/windows&&gpu/, \"windows-gpu\")\n        .replace(/g3.8xlarge-i-[^ ]+/, \"linux-gpu\")\n        .replace(/g3.16xlarge-i-[^ ]+/, \"linux-multigpu\")\n        .replace(/worker-win-c5.2xlarge-i-[^ ]+/, \"windows-cpu\")\n        .replace(/worker-win-g3.4xlarge-i-[^ ]+/, \"windows-gpu\");\n    }\n\n    const why_map = new Map();\n    this.state.items.forEach((q) => {\n      const why = summarize_why(q.why);\n      let v = why_map.get(why);\n      if (v === undefined) {\n        v = { total: 0 };\n        why_map.set(why, v);\n      }\n      v.total++;\n    });\n\n    const why_rows = [...why_map.entries()].sort().map((why_v) => {\n      const why = why_v[0];\n      const v = why_v[1];\n      return (\n        <tr key={why}>\n          <td style={{ textAlign: \"right\", paddingRight: 15 }}>{v.total}</td>\n          <th>{why}</th>\n        </tr>\n      );\n    });\n\n    const task_map = new Map();\n    this.state.items.forEach((q) => {\n      const task = summarize_url(q.task.url);\n      let v = task_map.get(task);\n      if (v === undefined) {\n        v = { total: 0 };\n        task_map.set(task, v);\n      }\n      v.total++;\n    });\n\n    const task_map_max = 10;\n    const task_rows = [...task_map.entries()]\n      .sort((a, b) => b[1].total - a[1].total)\n      .slice(0, task_map_max)\n      .map((task_v) => {\n        const task = task_v[0];\n        const v = task_v[1];\n        return (\n          <tr key={task}>\n            <td style={{ textAlign: \"right\", paddingRight: 15 }}>{v.total}</td>\n            <th>{task}</th>\n          </tr>\n        );\n      });\n\n    return (\n      <div>\n        <h2>\n          Queue{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            connectedIn={this.state.connectedIn}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n          />\n        </h2>\n        <table>\n          <tbody>\n            <tr>\n              <td\n                width={300}\n                style={{\n                  textOverflow: \"clip\",\n                  maxWidth: 300,\n                  overflow: \"hidden\",\n                }}\n              >\n                <table>\n                  <tbody>{why_rows}</tbody>\n                </table>\n              </td>\n              <td className=\"right-cell\" width={300}>\n                <table>\n                  <tbody>\n                    {task_rows}\n                    <tr>\n                      <td></td>\n                      <th>{task_map.size > task_map_max ? \"...\" : \"\"}</th>\n                    </tr>\n                  </tbody>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport jenkins from \"./Jenkins.js\";\nimport AsOf from \"./AsOf.js\";\nimport {\n  summarize_job,\n  summarize_date,\n  centsToDollars,\n  centsPerHour,\n} from \"./Summarize.js\";\nimport * as d3 from \"d3v4\";\nimport parse_duration from \"parse-duration\";\nimport Tooltip from \"rc-tooltip\";\n\nvar jobs_on_pr = [\n  \"_\",\n  \"setup\",\n  \"caffe2-py2-cuda9.0-cudnn7-windows\",\n  \"caffe2-py2-devtoolset7-rocmrpm-centos7.5\",\n  \"py3.6-clang7-rocmdeb-ubuntu16.04\",\n  \"win-ws2016-cuda9-cudnn7-py3\",\n\n  \"pytorch_linux_xenial_py2_7_9\",\n  \"pytorch_linux_xenial_cuda9_cudnn7_py3\",\n  \"pytorch_linux_xenial_py3_clang5_asan\",\n  \"pytorch_linux_xenial_py3_6_gcc5_4\",\n  \"pytorch_libtorch_linux_xenial_cuda9_cudnn7_py3\",\n\n  \"caffe2_py2_mkl_ubuntu16_04\",\n  \"caffe2_py3_5_cuda10_1_cudnn7_ubuntu16_04\",\n  \"caffe2_onnx_py2_gcc5_ubuntu16_04\",\n  \"caffe2_onnx_main_py3_6_clang7_ubuntu16_04\",\n  \"caffe2_onnx_ort1_py3_6_clang7_ubuntu16_04\",\n  \"caffe2_onnx_ort2_py3_6_clang7_ubuntu16_04\",\n  \"caffe2_py2_clang7_ubuntu16_04\",\n  \"caffe2_cmake_cuda9_0_cudnn7_ubuntu16_04\",\n  \"caffe2_py3_6_devtoolset7_cuda9_0_cudnn7_centos7\",\n\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi\",\n  \"binary_linux_libtorch_2_7_cpu\",\n\n  \"caffe2_py2_android_ubuntu16_04\",\n  \"caffe2_py2_system_macos10_13\",\n  \"pytorch_macos_10_13_py3\",\n  \"pytorch_macos_10_13_cuda9_2_cudnn7_py3\",\n  \"pytorch-linux_xenial_py3_clang5_android_ndk_r19c_x86_32_build\",\n  \"pytorch-linux-xenial-py3-clang5-android-ndk-r19c-gradle-build-x86_32\",\n  \"pytorch_ios_10_2_1_x86_64_build\",\n  \"pytorch_ios_10_2_1_arm64_build\",\n\n  \"pytorch_linux_backward_compatibility_check_test\",\n\n  \"pytorch_xla_linux_xenial_py3_6_clang7\",\n\n  \"pytorch_python_doc_push\",\n  \"pytorch_cpp_doc_push\",\n];\n\nvar binary_and_smoke_tests_on_pr = [\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_build\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_build\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_build\",\n  \"binary_macos_wheel_3_6_cpu_build\",\n  \"binary_macos_conda_2_7_cpu_build\",\n  \"binary_macos_libtorch_2_7_cpu_build\",\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_test\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_test\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_test\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_test\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps_test\",\n];\n\n// TODO: checks also supports neutral and action_required\n\nfunction is_success(result) {\n  return result === \"SUCCESS\" || result === \"success\";\n}\n\nfunction is_failure(result) {\n  // TODO: maybe classify timeout differently\n  return (\n    result === \"FAILURE\" ||\n    result === \"failure\" ||\n    result === \"error\" ||\n    result === \"timed_out\"\n  );\n}\n\nfunction is_aborted(result) {\n  return result === \"ABORTED\" || result === \"cancelled\";\n}\n\nfunction is_pending(result) {\n  return !result || result === \"pending\";\n}\n\nfunction getJobName(subBuild) {\n  const baseJobName = subBuild.jobName;\n  if (/caffe2-builds/.test(subBuild.url)) {\n    return \"caffe2-\" + baseJobName;\n  } else {\n    return baseJobName;\n  }\n}\n\nfunction classify_job_to_node(j) {\n  if (j === \"short-perf-test-gpu\") {\n    return \"linux-gpu\";\n  } else if (j === \"doc-push\") {\n    return \"linux-cpu\";\n  } else if (/-win/.test(j)) {\n    if (/-test/.test(j) && /-cuda/.test(j)) {\n      return \"win-gpu\";\n    } else {\n      return \"win-cpu\";\n    }\n  } else if (/-macos/.test(j)) {\n    return \"osx\";\n  } else if (\n    /-linux/.test(j) ||\n    /-ubuntu/.test(j) ||\n    /-centos/.test(j) ||\n    /-xenial/.test(j)\n  ) {\n    if (/cuda/.test(j)) {\n      if (/-multigpu-test/.test(j)) {\n        return \"linux-multigpu\";\n      } else if (/-test/.test(j)) {\n        return \"linux-gpu\";\n      } else {\n        return \"linux-cpu\";\n      }\n    } else if (/-rocm/.test(j)) {\n      if (/-test/.test(j)) {\n        return \"rocm\";\n      } else {\n        return \"linux-bigcpu\";\n      }\n    } else {\n      return \"linux-cpu\";\n    }\n  }\n  return \"unknown\";\n}\n\n// Ideas:\n//  - Put the master and pull request info together, so you can see what\n//  the reported 'master' status is for a given 'pull-request' build\n\nexport default class BuildHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    const prefs_str = localStorage.getItem(\"prefs\");\n    let prefs = {};\n    if (prefs_str) {\n      prefs = JSON.parse(prefs_str);\n    }\n    if (!(\"showStale\" in prefs)) prefs[\"showStale\"] = false;\n    if (!(\"username\" in prefs)) prefs[\"username\"] = \"\";\n    if (!(\"showNotifications\" in prefs)) prefs[\"showNotifications\"] = true;\n    return {\n      builds: [],\n      known_jobs: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      showStale: prefs.showStale,\n      username: prefs.username,\n      showNotifications: prefs.showNotifications,\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n    if (this.state.showNotifications && Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    localStorage.setItem(\n      \"prefs\",\n      JSON.stringify({\n        showNotifications: this.state.showNotifications,\n        showStale: this.state.showStale,\n        username: this.state.username,\n      })\n    );\n    if (this.props.job !== prevProps.job) {\n      this.setState(this.initialState());\n      this.update();\n    }\n  }\n  async update() {\n    const currentTime = new Date();\n    this.setState({ currentTime: currentTime });\n    // NB: server-slide slicing doesn't really help, Jenkins seems to\n    // load everything into memory anyway\n    let data;\n    if (true) {\n      // STOP.  You want more results?  You may have noticed that on\n      // Google, people suggest using allBuilds with {0,n} to make use\n      // of Jenkins pagination.  However, if you do this, it will *DOS our Jeenkins\n      // instance*; even when pagination is requested, Jenkins will\n      // still load ALL builds into memory before servicing your\n      // request.  I've filed this at https://issues.jenkins-ci.org/browse/JENKINS-49908\n      data = await jenkins.job(this.props.job, {\n        tree: `builds[\n                  url,\n                  number,\n                  duration,\n                  timestamp,\n                  result,\n                  actions[parameters[name,value],\n                  causes[shortDescription]],\n                  changeSet[items[commitId,comment,msg]],\n                  subBuilds[\n                    result,jobName,url,duration,\n                    build[\n                      subBuilds[\n                        result,jobName,url,duration,\n                        build[\n                          subBuilds[result,jobName,url,duration]\n                        ]\n                      ]\n                    ]\n                  ]\n               ]`.replace(/\\s+/g, \"\"),\n      });\n      // build[builtOn]\n    } else {\n      // If you want entries in build on subBuilds, need depth = 3\n      // Otherwise, most data can be got with depth = 1\n      const depth = 1;\n      data = await jenkins.job(this.props.job, { depth: depth });\n    }\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n    if (data.allBuilds !== undefined) {\n      data.builds = data.allBuilds;\n    }\n\n    // Get build statuses from Github for CircleCI\n    async function get_github_commit_statuses() {\n      let github_commit_statuses = {};\n      let requests = [];\n\n      function add_jobs(jobs, index) {\n        let commitId = requests[index].commitId;\n        if (jobs) {\n          for (let job_name in jobs) {\n            let job = jobs[job_name];\n            if (!github_commit_statuses[commitId].hasOwnProperty(job_name)) {\n              github_commit_statuses[commitId][job_name] = {\n                duration: \"0\",\n                result: job.status,\n                url: job.build_url,\n              };\n            }\n          }\n        }\n      }\n\n      for (const commit of data.builds) {\n        for (let i = 0; i < commit.changeSet.items.length; i++) {\n          let commitId = commit.changeSet.items[i].commitId;\n          if (!github_commit_statuses.hasOwnProperty(commitId)) {\n            github_commit_statuses[commitId] = {};\n          }\n          requests.push({\n            url:\n              \"https://s3.amazonaws.com/ossci-job-status/combined/\" +\n              commitId +\n              \".json\",\n            commitId,\n          });\n        }\n      }\n      let results = await jenkins.batch_get(\n        requests.map((request) => request.url)\n      );\n      results.forEach(add_jobs);\n      return github_commit_statuses;\n    }\n    data.github_commit_statuses = await get_github_commit_statuses();\n\n    const known_jobs_set = new Set();\n    function collect_known_jobs_set(topBuild) {\n      function go(subBuild) {\n        if (\n          subBuild.build &&\n          subBuild.build._class ===\n            \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n        ) {\n          subBuild.build.subBuilds.forEach(go);\n        } else {\n          known_jobs_set.add(getJobName(subBuild));\n        }\n      }\n      topBuild.subBuilds.forEach(go);\n    }\n    const props_mode = this.props.mode;\n    if (props_mode !== \"binary\") {\n      data.builds.forEach(collect_known_jobs_set);\n    }\n\n    if (data.github_commit_statuses) {\n      Object.keys(data.github_commit_statuses).forEach(function (commit) {\n        var jobs = data.github_commit_statuses[commit];\n        Object.keys(jobs).forEach(function (job_name) {\n          if (props_mode !== \"binary\") {\n            // Warning: quadratic police!\n            for (var i = 0; i < binary_and_smoke_tests_on_pr.length; i++) {\n              if (job_name.endsWith(binary_and_smoke_tests_on_pr[i])) {\n                known_jobs_set.add(\"_\" + job_name); // Add \"_\" before name to make sure CircleCI builds always show up on the left\n                break;\n              }\n            }\n            if (\n              !(job_name.includes(\"binary_\") || job_name.includes(\"smoke_\"))\n            ) {\n              // Exclude binary builds and smoke tests that are not running on every PR\n              known_jobs_set.add(\"_\" + job_name); // Add \"_\" before name to make sure CircleCI builds always show up on the left\n            }\n          } else {\n            if (job_name.includes(\"binary_\") || job_name.includes(\"smoke_\")) {\n              let found = false;\n              for (let i = 0; i < binary_and_smoke_tests_on_pr.length; i++) {\n                if (job_name.endsWith(binary_and_smoke_tests_on_pr[i])) {\n                  found = true;\n                  break;\n                }\n              }\n              if (!found) known_jobs_set.add(\"_\" + job_name);\n            }\n          }\n        });\n      });\n    }\n\n    function compareFun(x, y) {\n      const sx = jobs_on_pr.some((e) => summarize_job(x).startsWith(e));\n      const sy = jobs_on_pr.some((e) => summarize_job(y).startsWith(e));\n      if (sx < sy) return 1;\n      else if (sx > sy) return -1;\n      else if (x < y) return -1;\n      else if (x > y) return 1;\n      else return 0;\n    }\n    data.known_jobs = [...known_jobs_set.values()].sort(compareFun);\n\n    data.builds.forEach((build) => {\n      const sb_map = new Map();\n\n      // Collect job status from Jenkins\n      function collect_jobs(topBuild) {\n        function go(subBuild) {\n          if (\n            subBuild.build &&\n            subBuild.build._class ===\n              \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n          ) {\n            subBuild.build.subBuilds.forEach(go);\n          } else {\n            sb_map.set(getJobName(subBuild), subBuild);\n          }\n        }\n        topBuild.subBuilds.forEach(go);\n      }\n      collect_jobs(build);\n\n      // Collect job status for non-Jenkins jobs (i.e. CircleCI jobs)\n      async function collect_jobs_from_github_status(build) {\n        if (build.changeSet.items.length > 0) {\n          for (var i = 0; i < build.changeSet.items.length; i++) {\n            let commitId = build.changeSet.items[i].commitId;\n            if (data.github_commit_statuses) {\n              Object.keys(data.github_commit_statuses[commitId]).forEach(\n                function (job_name) {\n                  var job = data.github_commit_statuses[commitId][job_name];\n                  sb_map.set(\"_\" + job_name, {\n                    duration: job.duration,\n                    result: job.result,\n                    url: job.url,\n                  });\n                }\n              );\n            }\n          }\n        }\n      }\n      collect_jobs_from_github_status(build);\n      build.sb_map = sb_map;\n    });\n\n    // Figure out if we think something is broken or not.\n    //  1. Consider the MOST RECENT finished build for any given sub\n    //     build type.  If it is success, it's fine.\n    //  2. Otherwise, check builds prior to it.  If the previous build\n    //     also failed, we think it's broken!\n    //\n    // Special cases:\n    //  - pytorch_doc_push: don't care about this\n    //  - nightlies: these don't run all the time\n\n    const failure_window = 10;\n    if (this.props.job.includes(\"master\")) {\n      const still_unknown_set = new Set();\n      const consecutive_failure_count = new Map();\n      data.known_jobs.forEach((job) => {\n        if (job === \"pytorch_doc_push\") return;\n        if (job === \"__dr.ci\") return;\n        if (job.includes(\"nightlies\")) return;\n        still_unknown_set.add(job);\n      });\n      for (let i = 0; i < data.builds.length; i++) {\n        // After some window, don't look anymore; the job may have been\n        // removed\n        if (i > failure_window) break;\n        if (!still_unknown_set.size) break;\n        const build = data.builds[i];\n        const sb_map = build.sb_map;\n        sb_map.forEach((sb, jobName) => {\n          if (!still_unknown_set.has(jobName)) {\n            // do nothing\n          } else if (is_failure(sb.result)) {\n            let count = consecutive_failure_count.get(jobName) || 0;\n            count++;\n            consecutive_failure_count.set(jobName, count);\n          } else if (is_success(sb.result)) {\n            still_unknown_set.delete(jobName);\n          }\n        });\n      }\n\n      // Prune uninteresting alarms\n      consecutive_failure_count.forEach((v, k) => {\n        // Require two consecutive failure to alert\n        if (v <= 1) {\n          consecutive_failure_count.delete(k);\n        }\n      });\n\n      data.consecutive_failure_count = consecutive_failure_count;\n\n      // Compute what notifications to show\n      // We'll take a diff and then give notifications for keys that\n      // changed\n      if (this.state.consecutive_failure_count) {\n        this.state.consecutive_failure_count.forEach((v, key) => {\n          if (!consecutive_failure_count.has(key)) {\n            // It's fixed!\n            new Notification(\"✅ \" + this.props.job, {\n              body: summarize_job(key),\n            });\n          }\n        });\n      }\n      consecutive_failure_count.forEach((v, key) => {\n        // Don't produce notifications for initial failure!\n        if (\n          this.state.consecutive_failure_count &&\n          !this.state.consecutive_failure_count.has(key)\n        ) {\n          // It's failed!\n          new Notification(\"❌ \" + this.props.job, {\n            body: summarize_job(key),\n          });\n        }\n      });\n    }\n\n    // TODO: This can cause spurious state updates\n    this.setState(data);\n  }\n\n  render() {\n    function result_icon(result) {\n      if (is_success(result))\n        return (\n          <span role=\"img\" style={{ color: \"green\" }} aria-label=\"passed\">\n            0\n          </span>\n        );\n      if (is_failure(result))\n        return (\n          <span role=\"img\" style={{ color: \"red\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      if (is_aborted(result))\n        return (\n          <span role=\"img\" style={{ color: \"gray\" }} aria-label=\"cancelled\">\n            .\n          </span>\n        );\n      if (is_pending(result))\n        return (\n          <span\n            className=\"animate-flicker\"\n            role=\"img\"\n            style={{ color: \"goldenrod\" }}\n            aria-label=\"in progress\"\n          >\n            ?\n          </span>\n        );\n      return result;\n    }\n\n    // Sigh... the place where you can get the information you're\n    // interested in at the top level is NOT the same as where you get\n    // it inside, because of how Jenkins handles depth (Jenkins\n    // *will* give you information for everything recursively, just\n    // not in the place you might expect it.\n    //\n    //  class: \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n    //  id: \"3772\"\n    //  subBuilds:\n    //    0:\n    //      jobName: \"whatever\"\n    //      build:\n    //        class: \"com.tikal.jenkins.plugins.multijob.MultiJobBuild\"\n    //        subBuilds:\n\n    let builds = this.state.builds;\n    let consecutive_failure_count = this.state.consecutive_failure_count;\n\n    const known_jobs = this.state.known_jobs;\n    const known_jobs_head = known_jobs.map((jobName) => (\n      <th className=\"rotate\" key={jobName}>\n        <div\n          className={\n            (jobs_on_pr.some((e) => summarize_job(jobName).startsWith(e))\n              ? \"pr-header\"\n              : \"master-only-header\") +\n            \" \" +\n            (consecutive_failure_count.has(jobName) ? \"failing-header\" : \"\")\n          }\n        >\n          {jobs_on_pr.some((e) => summarize_job(jobName).startsWith(e))\n            ? \"\"\n            : \"• \"}\n          {summarize_job(jobName)}\n        </div>\n      </th>\n    ));\n    // const known_jobs_head = known_jobs.map((jobName) =>\n    //  <th key={jobName}></th>\n    //);\n\n    const durationWidth = 100;\n    const durationHeight = 10;\n    const durationScale = d3.scaleLinear().rangeRound([0, durationWidth]);\n    durationScale.domain([0, d3.max(builds, (b) => b.duration)]);\n\n    const seen_prs = new Set();\n\n    const rows = builds.map((build) => {\n      const sb_map = build.sb_map;\n\n      function perf_report(sb, result) {\n        return (\n          <Fragment>\n            <span\n              className={\n                is_success(result) ? \"ok-duration\" : \"suspect-duration\"\n              }\n            >\n              {parse_duration(sb.duration) / 1000}\n            </span>\n            &nbsp;&nbsp;\n          </Fragment>\n        );\n      }\n\n      // let cumulativeMs = 0;\n      let cost = 0;\n      let unknownCost = false;\n      let inProgressCost = false;\n      let found = false;\n\n      const status_cols = known_jobs.map((jobName) => {\n        const sb = sb_map.get(jobName);\n        let cell = <Fragment />;\n        if (sb !== undefined) {\n          found = true;\n          const dur = parse_duration(sb.duration);\n          // cumulativeMs += dur;\n          const node = classify_job_to_node(getJobName(sb));\n          let this_cost = 0;\n          if (node === \"unknown\") {\n            unknownCost = true;\n          } else {\n            this_cost = Math.ceil((centsPerHour[node] * dur) / 1000 / 60 / 60);\n          }\n          cost += this_cost;\n          if (!sb.result) inProgressCost = true;\n          if (this.props.mode === \"perf\") {\n            cell = perf_report(sb, sb.result);\n          } else if (this.props.mode === \"cost\") {\n            cell = (\n              <Fragment>\n                {node === \"unknown\" ? \"?\" : this_cost}&nbsp;&nbsp;\n              </Fragment>\n            );\n          } else {\n            var cellHref = sb.url;\n            if (/^https?:\\/\\//.test(cellHref)) {\n              if (cellHref.includes(\"jenkins\")) {\n                cellHref = cellHref + \"/console\";\n              }\n            } else {\n              cellHref = jenkins.link(cellHref + \"/console\");\n            }\n            cell = (\n              <a\n                href={cellHref}\n                className=\"icon\"\n                target=\"_blank\"\n                alt={getJobName(sb)}\n              >\n                {result_icon(sb.result)}\n              </a>\n            );\n          }\n        }\n        return (\n          <Tooltip\n            key={jobName}\n            overlay={jobName}\n            mouseLeaveDelay={0}\n            placement=\"rightTop\"\n            destroyTooltipOnHide={true}\n          >\n            <td\n              key={jobName}\n              className=\"icon-cell\"\n              style={{\n                textAlign: \"right\",\n                fontFamily: \"sans-serif\",\n                padding: 0,\n              }}\n            >\n              {cell}\n            </td>\n          </Tooltip>\n        );\n      });\n\n      function drop_pr_number(msg) {\n        return msg.replace(/\\(#[0-9]+\\)/, \"\");\n      }\n\n      function renderPullRequestNumber(comment) {\n        let m = comment.match(/\\(#(\\d+)\\)/);\n        if (m) {\n          return (\n            <Fragment>\n              <a\n                href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]}\n                target=\"_blank\"\n              >\n                #{m[1]}\n              </a>\n            </Fragment>\n          );\n        }\n        return <Fragment />;\n      }\n\n      function renderCommit(commit) {\n        return (\n          <div key={commit.commitId}>\n            {renderPullRequestNumber(commit.comment)}{\" \"}\n            {drop_pr_number(commit.msg)}{\" \"}\n            <code>\n              <a\n                href={\n                  \"https://github.com/pytorch/pytorch/commit/\" + commit.commitId\n                }\n                target=\"_blank\"\n              >\n                {commit.commitId.slice(0, 7)}\n              </a>\n            </code>\n          </div>\n        );\n      }\n\n      function renderCauses(changeSet) {\n        const defaultCause = <em>Manually triggered rebuild.</em>;\n        if (changeSet.actions === undefined) return defaultCause;\n        return changeSet.actions\n          .filter((action) => action.causes !== undefined)\n          .map((action, i) =>\n            action.causes.map((cause, i) => (\n              <em key={i}>{cause.shortDescription}. </em>\n            ))\n          );\n      }\n\n      function getPushedBy(build) {\n        const action = build.actions.find(\n          (action) => action._class === \"hudson.model.CauseAction\"\n        );\n        if (action === undefined) return \"(unknown)\";\n        const cause = action.causes.find(\n          (cause) => cause._class === \"com.cloudbees.jenkins.GitHubPushCause\"\n        );\n        if (cause === undefined) return \"\";\n        const match = cause.shortDescription.match(\n          /Started by GitHub push by (.+)/\n        );\n        if (match === null) return cause.shortDescription;\n        return match[1];\n      }\n\n      function getPullParams(build) {\n        let action = build.actions.find(\n          (action) =>\n            action._class ===\n            \"org.jenkinsci.plugins.ghprb.GhprbParametersAction\"\n        );\n        if (action === undefined) {\n          action = build.actions.find(\n            (action) =>\n              action._class ===\n              \"com.tikal.jenkins.plugins.multijob.MultiJobParametersAction\"\n          );\n        }\n        if (action === undefined) {\n          return new Map();\n        }\n        return new Map(\n          action.parameters.map((param) => [param.name, param.value])\n        );\n      }\n\n      const isRebuild = build.actions.some(\n        (action) =>\n          action.causes !== undefined &&\n          action.causes.some(\n            (cause) => cause._class === \"com.sonyericsson.rebuild.RebuildCause\"\n          )\n      );\n      const isPullRequest = build.actions.some(\n        (action) =>\n          action.causes !== undefined &&\n          action.causes.some(\n            (cause) =>\n              cause._class === \"org.jenkinsci.plugins.ghprb.GhprbCause\" ||\n              (cause._class === \"hudson.model.Cause$UpstreamCause\" &&\n                /-pull-request$/.test(cause.upstreamProject))\n          )\n      );\n\n      let author = \"\";\n      let desc = \"\";\n      let pull_link;\n      let pull_id;\n\n      // TODO: Too lazy to set up PR numbers for the old ones\n\n      let stale = false;\n      if (isRebuild) {\n        desc = renderCauses(build);\n      } else if (isPullRequest) {\n        const params = getPullParams(build);\n        const title = params.get(\"ghprbPullTitle\");\n        pull_link = params.get(\"ghprbPullLink\");\n        pull_id = params.get(\"ghprbPullId\");\n        author = params.get(\"ghprbPullAuthorLogin\");\n        desc = title;\n        if (seen_prs.has(pull_id)) {\n          // TODO: do this filtering earlier\n          if (!this.state.showStale) return <Fragment key={build.number} />;\n          stale = true;\n        }\n        if (this.state.username !== \"\" && this.state.username !== author) {\n          return <Fragment key={build.number} />;\n        }\n        seen_prs.add(pull_id);\n      } else {\n        const changeSet = build.changeSet;\n        // TODO: This is empty for not pytorch-master.  We could\n        // probably get the info if we propagate it as a variable.\n        author = getPushedBy(build);\n        if (changeSet.items.length === 0) {\n          desc = renderCauses(build);\n        } else {\n          desc = changeSet.items.slice().reverse().map(renderCommit);\n        }\n      }\n\n      const whenString = summarize_date(build.timestamp);\n\n      if (!found) {\n        return <Fragment />;\n      }\n\n      return (\n        <tr key={build.number} className={stale ? \"stale\" : \"\"}>\n          <th className=\"left-cell\">\n            <a href={build.url} target=\"_blank\">\n              {build.number}\n            </a>\n          </th>\n          <th className=\"left-cell\">\n            <a href={pull_link} target=\"_blank\">\n              {pull_id ? \"#\" + pull_id : \"\"}\n            </a>\n          </th>\n          <td className=\"left-cell\">{whenString}</td>\n          {status_cols}\n          <td className=\"right-cell bar-number\">\n            {Math.floor(build.duration / 1000 / 60)}\n          </td>\n          <td>\n            <svg width={durationWidth} height={durationHeight}>\n              <rect\n                className=\"bar\"\n                x=\"0\"\n                y=\"0\"\n                width={durationScale(build.duration)}\n                height={durationHeight}\n              />\n            </svg>\n          </td>\n          <td className=\"right-cell\" style={{ textAlign: \"right\" }}>\n            {inProgressCost ? \"≥ \" : \"\"}\n            {centsToDollars(cost)}\n            {unknownCost ? \"?\" : \"\"}\n          </td>\n          <td className=\"right-cell\">{author}</td>\n          <td className=\"right-cell\">{desc}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <h2>\n          <a href={jenkins.link(\"job/\" + this.props.job)} target=\"_blank\">\n            {this.props.job}\n          </a>{\" \"}\n          history{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            connectedIn={this.state.connectedIn}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n          />\n        </h2>\n        <div style={{ color: \"#909\" }}>\n          • Purple bulleted jobs run on master only.\n        </div>\n        <div>\n          <ul className=\"menu\">\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-stale\"\n                checked={this.state.showStale}\n                onChange={(e) => {\n                  this.setState({ showStale: e.target.checked });\n                }}\n              />\n              <label htmlFor=\"show-stale\">Show stale builds of PRs</label>\n            </li>\n            <li>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={(e) => {\n                  this.setState({ username: e.target.value });\n                }}\n              />\n              <label\n                htmlFor=\"username\"\n                style={{\n                  backgroundColor: \"white\",\n                  position: \"relative\",\n                  zIndex: 3,\n                }}\n              >\n                Show builds from this user only\n              </label>\n            </li>\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-notifications\"\n                checked={this.state.showNotifications}\n                onChange={(e) =>\n                  this.setState({ showNotifications: e.target.checked })\n                }\n              />\n              <label htmlFor=\"show-notifications\">\n                Show notifications on master failure\n                {Notification.permission === \"denied\" ? (\n                  <Fragment>\n                    {\" \"}\n                    <strong>\n                      (WARNING: notifications are currently denied)\n                    </strong>\n                  </Fragment>\n                ) : (\n                  \"\"\n                )}\n              </label>\n            </li>\n          </ul>\n        </div>\n        <table className=\"buildHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">J#</th>\n              <th className=\"left-cell\">PR#</th>\n              <th className=\"left-cell\">Date</th>\n              {known_jobs_head}\n              <th className=\"right-cell\" colSpan=\"2\">\n                Latency (min)\n              </th>\n              <th className=\"right-cell\">Cost</th>\n              <th className=\"right-cell\">User</th>\n              <th className=\"right-cell\">Description</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport AsOf from \"./AsOf.js\";\nimport { summarize_job, summarize_date } from \"./Summarize.js\";\nimport Tooltip from \"rc-tooltip\";\nimport axios from \"axios\";\n\nconst binary_and_smoke_tests_on_pr = [\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_build\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_build\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_build\",\n  \"binary_macos_wheel_3_6_cpu_build\",\n  \"binary_macos_conda_2_7_cpu_build\",\n  \"binary_macos_libtorch_2_7_cpu_build\",\n  \"binary_linux_manywheel_2_7mu_cpu_devtoolset7_test\",\n  \"binary_linux_manywheel_3_7m_cu100_devtoolset7_test\",\n  \"binary_linux_conda_2_7_cpu_devtoolset7_test\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_build\",\n  \"binary_linux_libtorch_2_7m_cpu_devtoolset7_shared-with-deps_test\",\n  \"binary_linux_libtorch_2_7m_cpu_gcc5_4_cxx11-abi_shared-with-deps\",\n  \"pytorch_linux_xenial_pynightly\",\n];\n\nfunction nightly_run_on_pr(job_name) {\n  return binary_and_smoke_tests_on_pr.some((n) => job_name.includes(n));\n}\n\nfunction is_success(result) {\n  return result === \"SUCCESS\" || result === \"success\";\n}\n\nfunction is_failure(result) {\n  // TODO: maybe classify timeout differently\n  return (\n    result === \"FAILURE\" ||\n    result === \"failure\" ||\n    result === \"error\" ||\n    result === \"timed_out\"\n  );\n}\n\nfunction is_aborted(result) {\n  return result === \"ABORTED\" || result === \"cancelled\";\n}\n\nfunction is_pending(result) {\n  return !result || result === \"pending\";\n}\n\nfunction is_skipped(result) {\n  return result === \"skipped\";\n}\n\nfunction is_infra_failure(result) {\n  return result === \"infrastructure_fail\";\n}\n\nfunction objToStrMap(obj) {\n  let strMap = new Map();\n  for (let k of Object.keys(obj)) {\n    strMap.set(k, obj[k]);\n  }\n  return strMap;\n}\n\nexport default class BuildHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    const prefs_str = localStorage.getItem(\"prefs2\");\n    let prefs = {};\n    if (prefs_str) {\n      prefs = JSON.parse(prefs_str);\n    }\n    if (!(\"showNotifications\" in prefs)) prefs[\"showNotifications\"] = true;\n    if (!(\"showServiceJobs\" in prefs)) prefs[\"showServiceJobs\"] = true;\n    return {\n      builds: [],\n      known_jobs: [],\n      currentTime: new Date(),\n      updateTime: new Date(0),\n      showNotifications: prefs.showNotifications,\n      showServiceJobs: prefs.showServiceJobs,\n      jobNameFilter: \"\",\n    };\n  }\n  componentDidMount() {\n    this.update();\n    this.interval = setInterval(this.update.bind(this), this.props.interval);\n    if (this.state.showNotifications && Notification.permission !== \"granted\") {\n      Notification.requestPermission();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    localStorage.setItem(\n      \"prefs2\",\n      JSON.stringify({\n        showNotifications: this.state.showNotifications,\n        showServiceJobs: this.state.showServiceJobs,\n      })\n    );\n    if (\n      this.props.job !== prevProps.job ||\n      this.props.mode !== prevProps.mode\n    ) {\n      this.setState(this.initialState());\n      this.update();\n    }\n  }\n  async update() {\n    const currentTime = new Date();\n    const branch = this.props.job.replace(/^pytorch-/, \"\");\n    const build_prefix = branch === \"master\" ? branch : \"pr\";\n    const url_prefix = \"https://s3.amazonaws.com/ossci-job-status\";\n    this.setState({ currentTime: currentTime });\n\n    const commits = await axios.get(`${url_prefix}/${branch}/index.json`);\n\n    const requests = commits.data.map(async (build) => {\n      try {\n        const r = await axios.get(\n          `${url_prefix}/${build_prefix}/${build.id}.json`\n        );\n        build.sb_map = objToStrMap(r.data);\n      } catch (e) {\n        build.sb_map = new Map();\n        // swallow\n      }\n      return build;\n    });\n    const builds = await axios.all(requests);\n    builds.reverse();\n    console.log(builds);\n\n    const data = {};\n\n    data.updateTime = new Date();\n    data.connectedIn = data.updateTime - currentTime;\n\n    const props_mode = this.props.mode;\n\n    const known_jobs_set = new Set();\n    builds.forEach((build) => {\n      build.sb_map.forEach((sb, job_name) => {\n        const nightly_candidates =\n          job_name.includes(\"binary_\") ||\n          job_name.includes(\"smoke_\") ||\n          job_name.includes(\"nightly_\") ||\n          job_name.includes(\"nigthly_\");\n        const is_nightly = nightly_candidates && !nightly_run_on_pr(job_name);\n        if (\n          (props_mode !== \"nightly\" && !is_nightly) ||\n          (props_mode === \"nightly\" && is_nightly)\n        ) {\n          known_jobs_set.add(job_name);\n        }\n      });\n    });\n\n    data.known_jobs = [...known_jobs_set.values()].sort();\n    data.builds = builds;\n\n    // Figure out if we think something is broken or not.\n    //  1. Consider the MOST RECENT finished build for any given sub\n    //     build type.  If it is success, it's fine.\n    //  2. Otherwise, check builds prior to it.  If the previous build\n    //     also failed, we think it's broken!\n    //\n    // Special cases:\n    //  - pytorch_doc_push: don't care about this\n    //  - nightlies: these don't run all the time\n\n    const failure_window = 10;\n    if (this.props.job.startsWith(\"pytorch-\")) {\n      const still_unknown_set = new Set();\n      const consecutive_failure_count = new Map();\n      data.known_jobs.forEach((job) => {\n        if (job === \"pytorch_doc_push\") return;\n        if (job === \"__dr.ci\") return;\n        if (job.includes(\"nightlies\")) return;\n        still_unknown_set.add(job);\n      });\n      for (let i = 0; i < data.builds.length; i++) {\n        // After some window, don't look anymore; the job may have been\n        // removed\n        if (i > failure_window) break;\n        if (!still_unknown_set.size) break;\n        const build = data.builds[i];\n        const sb_map = build.sb_map;\n        sb_map.forEach((sb, jobName) => {\n          if (!still_unknown_set.has(jobName)) {\n            // do nothing\n          } else if (is_failure(sb.status)) {\n            let count = consecutive_failure_count.get(jobName) || 0;\n            count++;\n            consecutive_failure_count.set(jobName, count);\n          } else if (is_success(sb.status)) {\n            still_unknown_set.delete(jobName);\n          }\n        });\n      }\n\n      // Prune uninteresting alarms\n      consecutive_failure_count.forEach((v, k) => {\n        // Require two consecutive failure to alert\n        if (v <= 1) {\n          consecutive_failure_count.delete(k);\n        }\n      });\n\n      data.consecutive_failure_count = consecutive_failure_count;\n\n      // Compute what notifications to show\n      // We'll take a diff and then give notifications for keys that\n      // changed\n      if (this.state.consecutive_failure_count) {\n        this.state.consecutive_failure_count.forEach((v, key) => {\n          if (!consecutive_failure_count.has(key)) {\n            // It's fixed!\n            new Notification(\"✅ \" + this.props.job, {\n              body: summarize_job(key),\n            });\n          }\n        });\n      }\n      consecutive_failure_count.forEach((v, key) => {\n        // Don't produce notifications for initial failure!\n        if (\n          this.state.consecutive_failure_count &&\n          !this.state.consecutive_failure_count.has(key)\n        ) {\n          // It's failed!\n          new Notification(\"❌ \" + this.props.job, {\n            body: summarize_job(key),\n          });\n        }\n      });\n    }\n\n    this.setState(data);\n  }\n\n  shouldShowJob(name) {\n    const jobNameFilter = this.state.jobNameFilter;\n    if (jobNameFilter.length > 0 && !name.includes(jobNameFilter)) {\n      return false;\n    }\n    if (this.state.showServiceJobs) {\n      return true;\n    }\n    const isDockerJob = name.startsWith(\"ci/circleci: docker\");\n    const isGCJob = name.startsWith(\"ci/circleci: ecr_gc\");\n    return !(isDockerJob || name === \"welcome\" || isGCJob);\n  }\n\n  render() {\n    function result_icon(result) {\n      if (is_success(result))\n        return (\n          <span role=\"img\" style={{ color: \"green\" }} aria-label=\"passed\">\n            0\n          </span>\n        );\n      if (is_skipped(result))\n        return (\n          <span role=\"img\" style={{ color: \"gray\" }} aria-label=\"skipped\">\n            S\n          </span>\n        );\n      if (is_failure(result))\n        return (\n          <span role=\"img\" style={{ color: \"red\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      if (is_aborted(result))\n        return (\n          <span role=\"img\" style={{ color: \"gray\" }} aria-label=\"cancelled\">\n            .\n          </span>\n        );\n      if (is_pending(result))\n        return (\n          <span\n            className=\"animate-flicker\"\n            role=\"img\"\n            style={{ color: \"goldenrod\" }}\n            aria-label=\"in progress\"\n          >\n            ?\n          </span>\n        );\n      if (is_infra_failure(result))\n        return (\n          <span role=\"img\" style={{ color: \"grey\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      return result;\n    }\n\n    let builds = this.state.builds;\n    let consecutive_failure_count = this.state.consecutive_failure_count;\n\n    const visible_jobs = this.state.known_jobs.filter((name) =>\n      this.shouldShowJob(name)\n    );\n    const visible_jobs_head = visible_jobs.map((jobName) => (\n      <th className=\"rotate\" key={jobName}>\n        <div\n          className={\n            consecutive_failure_count.has(jobName) ? \"failing-header\" : \"\"\n          }\n        >\n          {summarize_job(jobName)}\n        </div>\n      </th>\n    ));\n\n    const rows = builds.map((build) => {\n      let found = false;\n      const sb_map = build.sb_map;\n      console.log(build);\n\n      const status_cols = visible_jobs.map((jobName) => {\n        const sb = sb_map.get(jobName);\n        let cell = <Fragment />;\n        if (sb !== undefined) {\n          found = true;\n          cell = (\n            <a\n              href={sb.build_url}\n              className=\"icon\"\n              target=\"_blank\"\n              alt={jobName}\n            >\n              {result_icon(sb.status)}\n            </a>\n          );\n        }\n        return (\n          <Tooltip\n            key={jobName}\n            overlay={jobName}\n            mouseLeaveDelay={0}\n            placement=\"rightTop\"\n            destroyTooltipOnHide={true}\n          >\n            <td\n              key={jobName}\n              className=\"icon-cell\"\n              style={{\n                textAlign: \"right\",\n                fontFamily: \"sans-serif\",\n                padding: 0,\n              }}\n            >\n              {cell}\n            </td>\n          </Tooltip>\n        );\n      });\n\n      function drop_pr_number(msg) {\n        return msg.replace(/\\(#[0-9]+\\)/, \"\");\n      }\n\n      function renderPullRequestNumber(comment) {\n        let m = comment.match(/\\(#(\\d+)\\)/);\n        if (m) {\n          return (\n            <Fragment>\n              <a\n                href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]}\n                target=\"_blank\"\n              >\n                #{m[1]}\n              </a>\n            </Fragment>\n          );\n        }\n        m = comment.match(\n          /https:\\/\\/github.com\\/pytorch\\/pytorch\\/pull\\/(\\d+)/\n        );\n        if (m) {\n          return (\n            <Fragment>\n              <a\n                href={\"https://github.com/pytorch/pytorch/pull/\" + m[1]}\n                target=\"_blank\"\n              >\n                #{m[1]}\n              </a>\n            </Fragment>\n          );\n        }\n        return <Fragment />;\n      }\n\n      let author = build.author.username\n        ? build.author.username\n        : build.author.name;\n\n      const desc = (\n        <div key={build.id}>\n          {drop_pr_number(build.message).split(\"\\n\")[0]}{\" \"}\n          <code>\n            <a\n              href={\"https://github.com/pytorch/pytorch/commit/\" + build.id}\n              target=\"_blank\"\n            >\n              {build.id.slice(0, 7)}\n            </a>\n          </code>\n        </div>\n      );\n\n      // TODO: Too lazy to set up PR numbers for the old ones\n\n      let stale = false;\n\n      // TODO: need to store this in index or payload\n      const whenString = summarize_date(build.timestamp);\n\n      if (!found) {\n        return <Fragment key={build.id} />;\n      }\n\n      return (\n        <tr key={build.id} className={stale ? \"stale\" : \"\"}>\n          <th className=\"left-cell\">\n            {renderPullRequestNumber(build.message)}\n          </th>\n          <td className=\"left-cell\" title={build.timestamp}>\n            {whenString}\n          </td>\n          {status_cols}\n          <td className=\"right-cell\">{author}</td>\n          <td className=\"right-cell\">{desc}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div>\n        <h2>\n          {this.props.job} history{\" \"}\n          <AsOf\n            interval={this.props.interval}\n            connectedIn={this.state.connectedIn}\n            currentTime={this.state.currentTime}\n            updateTime={this.state.updateTime}\n          />\n        </h2>\n        <div>\n          <ul className=\"menu\">\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-notifications\"\n                checked={this.state.showNotifications}\n                onChange={(e) =>\n                  this.setState({ showNotifications: e.target.checked })\n                }\n              />\n              <label htmlFor=\"show-notifications\">\n                Show notifications on master failure\n                {Notification.permission === \"denied\" ? (\n                  <Fragment>\n                    {\" \"}\n                    <strong>\n                      (WARNING: notifications are currently denied)\n                    </strong>\n                  </Fragment>\n                ) : (\n                  \"\"\n                )}\n              </label>\n            </li>\n            <br />\n            <li>\n              <input\n                type=\"checkbox\"\n                name=\"show-service-jobs\"\n                checked={this.state.showServiceJobs}\n                onChange={(e) =>\n                  this.setState({ showServiceJobs: e.target.checked })\n                }\n              />\n              <label htmlFor=\"show-service-jobs\">Show service jobs</label>\n            </li>\n            <br />\n            <li>\n              <label htmlFor=\"job-name-filter\">Name filter:&nbsp;</label>\n              <input\n                type=\"input\"\n                name=\"job-name-filter\"\n                value={this.state.jobNameFilter}\n                onChange={(e) =>\n                  this.setState({ jobNameFilter: e.target.value })\n                }\n              />\n            </li>\n          </ul>\n        </div>\n        <table className=\"buildHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">PR#</th>\n              <th className=\"left-cell\">Date</th>\n              {visible_jobs_head}\n              <th className=\"right-cell\">User</th>\n              <th className=\"right-cell\">Description</th>\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport Tooltip from \"rc-tooltip\";\nimport axios from \"axios\";\n\nfunction objToStrMap(obj) {\n  let strMap = new Map();\n  for (let k of Object.keys(obj)) {\n    strMap.set(k, obj[k]);\n  }\n  return strMap;\n}\n\n// define the threshold to determine whether it is regression/optimization\nconst THRESHOLD = 0.1;\nconst ROUND_PRECISION = 100000;\n\nfunction round_float(mean) {\n  return Math.round(mean * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nexport default class PerfHistoryDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.initialState();\n  }\n  initialState() {\n    return {\n      builds: [],\n      known_jobs: [],\n      jobNameFilter: \"\",\n    };\n  }\n  componentDidMount() {\n    this.update();\n  }\n  componentDidUpdate(prevProps) {}\n  async update() {\n    const url_prefix =\n      \"https://s3.amazonaws.com/ossci-metrics/torchbench_v0_nightly\";\n    // branch: v0-nightly\n    const indexes = await axios.get(`${url_prefix}/index.json`);\n    console.log(indexes.data);\n    const requests = indexes.data.map(async (run) => {\n      try {\n        const r = await axios.get(`${url_prefix}/${run.result.relpath}`);\n        run.sb_map = objToStrMap(r.data);\n      } catch (e) {\n        run.sb_map = new Map();\n      }\n      return run;\n    });\n    const builds = await axios.all(requests);\n    const known_jobs_set = new Set();\n    // Use the oldest benchmark run as the standard\n    const standard_benchmark = builds[0].sb_map.get(\"benchmarks\");\n    const benchmark_index = new Map();\n\n    standard_benchmark.forEach((benchmark, index) => {\n      known_jobs_set.add(benchmark[\"name\"]);\n      benchmark_index.set(benchmark[\"name\"], index);\n    });\n    console.log(known_jobs_set);\n    // Figure out if we think there is performance regression or not.\n    // 1. If the test mean is >10% smaller than the previous mean, it is an optimization\n    // 3. If the test mean is >10% larger than the previous mean, it is a regression\n    // 4. Otherwise, it is a stable result\n    for (let i = 0; i < builds.length; i++) {\n      const sb_map = builds[i].sb_map;\n      // Get the test\n      sb_map.get(\"benchmarks\").forEach((benchmark) => {\n        const build_benchmark_mean = benchmark[\"stats\"][\"mean\"];\n        const build_benchmark_index = benchmark_index.get(benchmark[\"name\"]);\n        if (i === 0) {\n          benchmark[\"stats\"][\"prev_mean\"] = build_benchmark_mean;\n        } else {\n          const prev_mean =\n            builds[i - 1].sb_map.get(\"benchmarks\")[build_benchmark_index][\n              \"stats\"\n            ][\"mean\"];\n          benchmark[\"stats\"][\"prev_mean\"] = prev_mean;\n        }\n      });\n    }\n\n    builds.reverse();\n\n    const data = {};\n    data.known_jobs = [...known_jobs_set.values()].sort();\n    data.benchmark_index = benchmark_index;\n    data.builds = builds;\n    this.setState(data);\n  }\n\n  shouldShowJob(name) {\n    const jobNameFilter = this.state.jobNameFilter;\n    if (jobNameFilter.length > 0 && !name.includes(jobNameFilter)) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    function gen_summary(delta) {\n      delta = Math.round(delta * 10000) / 100;\n      if (delta >= 0) {\n        delta = \"+\" + delta;\n      }\n      delta += \"%\";\n      return delta;\n    }\n\n    function is_optimized(delta) {\n      return delta < -1 * THRESHOLD;\n    }\n\n    function is_regression(delta) {\n      return delta > THRESHOLD;\n    }\n\n    function result_icon(result) {\n      if (is_optimized(result))\n        return (\n          <span role=\"img\" style={{ color: \"green\" }} aria-label=\"passed\">\n            0\n          </span>\n        );\n      if (is_regression(result))\n        return (\n          <span role=\"img\" style={{ color: \"red\" }} aria-label=\"failed\">\n            X\n          </span>\n        );\n      return (\n        <span role=\"img\" style={{ color: \"grey\" }} aria-label=\"passed\">\n          -\n        </span>\n      );\n    }\n\n    let builds = this.state.builds;\n    const visible_jobs = this.state.known_jobs.filter((name) =>\n      this.shouldShowJob(name)\n    );\n    const visible_jobs_head = visible_jobs.map((jobName) => (\n      <th className=\"rotate\" key={jobName} width=\"20px;\">\n        <div>{jobName}</div>\n      </th>\n    ));\n    const benchmark_index = this.state.benchmark_index;\n\n    const rows = builds.map((build) => {\n      const sb_map = build.sb_map;\n      const pytorch_version =\n        build.sb_map.get(\"machine_info\")[\"pytorch_version\"];\n      const status_cols = visible_jobs.map((jobName) => {\n        const sb = sb_map.get(\"benchmarks\")[benchmark_index.get(jobName)];\n        const colkey = pytorch_version + \"-\" + jobName;\n        let cell = <Fragment />;\n        const prev_delta =\n          (sb[\"stats\"][\"mean\"] - sb[\"stats\"][\"prev_mean\"]) /\n          sb[\"stats\"][\"prev_mean\"];\n        if (sb !== undefined) {\n          cell = result_icon(prev_delta);\n        }\n        return (\n          <Tooltip\n            key={jobName}\n            overlay={\n              jobName +\n              \" Mean: \" +\n              round_float(sb[\"stats\"][\"mean\"]) +\n              \", prev mean: \" +\n              round_float(sb[\"stats\"][\"prev_mean\"]) +\n              \", delta: \" +\n              gen_summary(prev_delta)\n            }\n            mouseLeaveDelay={0}\n            placement=\"rightTop\"\n            destroyTooltipOnHide={true}\n          >\n            <td\n              key={colkey}\n              className=\"icon-cell\"\n              style={{\n                textAlign: \"right\",\n                fontFamily: \"sans-serif\",\n                padding: 0,\n              }}\n            >\n              {\" \"}\n              {cell}{\" \"}\n            </td>\n          </Tooltip>\n        );\n      });\n\n      return (\n        <tr key={pytorch_version}>\n          <th className=\"left-cell\"> torch-{pytorch_version} </th>\n          {status_cols}\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <h2>TorchBench v0 nightly testing result</h2>\n        <div>\n          <ul className=\"menu\"></ul>\n        </div>\n        <table className=\"perfHistoryTable\">\n          <thead>\n            <tr>\n              <th className=\"left-cell\">Build</th>\n              {visible_jobs_head}\n            </tr>\n          </thead>\n          <tbody>{rows}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"@toast-ui/chart/dist/toastui-chart.css\"\nimport Chart from \"@toast-ui/chart\";\n\n\nexport default class JobCorrelationHeatmap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  correlateJobs(all_jobs) {\n    let passes = [\"success\", \"skipped\", \"pending\", \"queued\"];\n    const seen_names = {};\n    const correlationMatrix = {}\n\n    const addFailure = (failure1, failure2) => {\n        seen_names[failure1] = true;\n        seen_names[failure2] = true;\n        if (!correlationMatrix[failure1]) {\n            correlationMatrix[failure1] = [];\n        }\n        if (!correlationMatrix[failure1][failure2]) {\n            correlationMatrix[failure1][failure2] = 0;\n        }\n        correlationMatrix[failure1][failure2] += 1;\n    }\n\n    for (const jobs of all_jobs) {\n        let failures = [];\n        for (const job_name in jobs.value) {\n            const job = jobs.value[job_name];\n            if (job.status && passes.indexOf(job.status) === -1) {\n                failures.push(job_name);\n            }\n        }\n\n        for (const failure1 of failures) {\n            for (const failure2 of failures) {\n                addFailure(failure1, failure2);\n            }\n        }\n    }\n\n    const job_names = Object.keys(seen_names).sort();\n    \n    const fullMatrix = [];\n    for (const name1 of job_names) {\n        const row = [];\n        for (const name2 of job_names) {\n            if (correlationMatrix[name1] && correlationMatrix[name1][name2]) {\n                row.push(correlationMatrix[name1][name2]);\n            } else {\n                row.push(0);\n            }\n        }\n        fullMatrix.push(row);\n    }\n\n    return [job_names, fullMatrix];\n  }\n\n  async update() {\n    const base = \"https://ossci-job-status.s3.amazonaws.com/master\"\n    const data = {\n      job_index: JSON.parse(\n        await fetch(\n          `${base}/index.json`,\n          { cache: \"no-cache\" }\n        ).then((a) => a.text())\n      ),\n    };\n    const promises = data.job_index.map(job => {\n        return fetch(`${base}/${job.id}.json`).then(r => r.json());\n    });\n    this.state.correlations = this.correlateJobs(await Promise.allSettled(promises));\n    this.setState(data);\n  }\n\n  tooltipTemplate(model, defaultTooltipTemplate, theme) {\n    const { background } = theme;\n    let [a, b] = model.data[0].label.split(\", \");\n    return `\n        <div\n        style=\"\n    background: ${background};\n    padding: 0 5px;\n    text-align: center;\n    color: white;\">\n        <div\n        class=\"toastui-chart-tooltip-category\"\n        style=\"font-weight: bold; font-family: Arial, sans-serif; font-size: 13px; color: #ffffff;\">\n            ${a}\n            <br />\n            ${b}\n        </div>\n        <div\n        class=\"toastui-chart-tooltip-series-wrapper\"\n        style=\"font-weight: normal; font-family: Arial, sans-serif; font-size: 12px; color: #ffffff;\">\n            <div class=\"toastui-chart-tooltip-series\">\n                <span class=\"toastui-chart-series-name\">\n                <i class=\"toastui-chart-icon\" style=\"background: ${model.data[0].color}\"></i>\n                <span class=\"toastui-chart-name\">${model.data[0].value}</span>\n                </span>\n            </div>\n        </div>\n    </div>\n    `;\n  }\n\n  componentDidUpdate() {\n    if (!this.state.correlations) {\n      return;\n    }\n \n    const el = document.getElementById(\"job-correlations\");\n    let [job_names, correlationMatrix] = this.state.correlations;\n    el.innerHTML = \"\";\n    const options = {\n        usageStatistics: false,\n        xAxis: {\n            label: {\n                formatter: (a, b) => \"\",\n            }\n        },\n        yAxis: {\n            label: {\n                formatter: (a, b) => \"\",\n            }\n        },\n        tooltip: {\n            template: this.tooltipTemplate\n        }\n    };\n    let data = {\n        categories: {\n            x: job_names,\n            y: job_names,\n        },\n        series: correlationMatrix\n    };\n    Chart.heatmapChart({ el, data, options });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>CI Job Correlations</h2>\n        <div id=\"job-correlations\" style={{width: \"550px\", height: \"550px\"}}>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"@toast-ui/chart/dist/toastui-chart.css\"\nimport Chart from \"@toast-ui/chart\";\n\nexport default class GitHubActionsDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    this.update();\n  }\n  async update() {\n    const data = {\n      actions_statuses: JSON.parse(\n        await fetch(\n          \"https://ossci-checks-status.s3.amazonaws.com/status.json\",\n          { cache: \"no-cache\" }\n        ).then((a) => a.text())\n      ),\n    };\n    this.setState(data);\n  }\n\n  componentDidUpdate() {\n    if (!this.state.actions_statuses) {\n      return;\n    }\n    const series = {\n      dates: [],\n    };\n    let keys = [\"in_progress\", \"queued\", \"pending\"];\n    for (const key of keys) {\n      series[key] = [];\n    }\n    this.state.actions_statuses.sort((a, b) => {\n      return a.last_updated - b.last_updated;\n    });\n    for (const item of this.state.actions_statuses) {\n      series.dates.push(new Date(item.last_updated * 1000).toLocaleString());\n      for (const key of keys) {\n        series[key].push(item[key] || 0);\n      }\n    }\n    const data_series = [];\n    for (const key of keys) {\n      data_series.push({\n        name: key,\n        data: series[key],\n      });\n    }\n    const data = {\n      categories: series.dates,\n      series: data_series\n    }\n\n    const el = document.getElementById(\"chart\");\n    el.innerHTML = \"\";\n    const options = {};\n    Chart.lineChart({ el, data, options });\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>GitHub Actions Status</h2>\n        <div id=\"chart\" style={{width: \"600px\", height: \"400px\"}}>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Fragment } from \"react\";\nimport \"./App.css\";\nimport ComputerDisplay from \"./ComputerDisplay.js\";\nimport QueueDisplay from \"./QueueDisplay.js\";\nimport BuildHistoryDisplay from \"./BuildHistoryDisplay.js\";\nimport GitHubStatusDisplay from \"./GitHubStatusDisplay.js\";\nimport PerfHistoryDisplay from \"./PerfHistoryDisplay.js\";\nimport JobCorrelationHeatmap from \"./JobCorrelationHeatmap.js\";\nimport GitHubActionsDisplay from \"./GitHubActionsDisplay.js\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nconst App = () => (\n  <Router basename={process.env.PUBLIC_URL + \"/\"}>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App-title\">\n          <Link to=\"/\">ci.pytorch.org HUD</Link> (\n          <a href=\"https://github.com/pytorch/pytorch-ci-hud\">GitHub</a>)\n        </h1>\n      </header>\n      <ul className=\"menu\">\n        <li>New-style (warning, does NOT show Jenkins builds):</li>\n        {[\"pytorch\"].map((e) => (\n          <Fragment key={e}>\n            {[\"master\", \"nightly\", \"release/1.9\"].map((trigger) => (\n              <li key={`${e}-${trigger}`}>\n                <Link to={`/build2/${e}-${trigger}`}>\n                  {e}-{trigger}\n                </Link>\n                &nbsp; (\n                <Link to={`/build2/${e}-${trigger}?mode=nightly`}>binary</Link>)\n              </li>\n            ))}\n          </Fragment>\n        ))}\n        {[\"torchbench-v0-nightly\", \"status\"].map((e) => (\n          <li key={`${e}`}>\n            <Link to={`/${e}`}>{e}</Link>\n          </li>\n        ))}\n      </ul>\n      <ul className=\"deprecated-menu\">\n        <li>Old-style:</li>\n        {[\n          \"pytorch\",\n          // \"tensorcomp\",\n          // \"translate\",\n          \"rocm-pytorch\",\n        ].map((e) => (\n          <Fragment key={e}>\n            {[\"master\", \"pull-request\"].map((trigger) => (\n              <li key={e + \"-\" + trigger}>\n                <Link to={\"/build1/\" + e + \"-\" + trigger}>\n                  {e}-{trigger}\n                </Link>\n                &nbsp; (\n                <Link to={\"/build1/\" + e + \"-\" + trigger + \"?mode=perf\"}>\n                  perf\n                </Link>\n                /\n                <Link to={\"/build1/\" + e + \"-\" + trigger + \"?mode=cost\"}>\n                  cost\n                </Link>\n                {e === \"pytorch\" && trigger === \"master\" ? (\n                  <Fragment>\n                    /\n                    <Link to={\"/build1/\" + e + \"-\" + trigger + \"?mode=binary\"}>\n                      binary\n                    </Link>\n                  </Fragment>\n                ) : (\n                  <Fragment />\n                )}\n                )\n              </li>\n            ))}\n          </Fragment>\n        ))}\n        <Fragment key=\"nightlies-uploaded\">\n          <li>\n            <Link to={\"/build1/nightlies-uploaded\"}>nightlies-uploaded</Link>\n          </li>\n        </Fragment>\n      </ul>\n      <Route exact path=\"/\">\n        <Redirect to=\"/build2/pytorch-master\" />\n      </Route>\n      <Route path=\"/build\" component={BuildRoute} />\n      <Route path=\"/build1\" component={Build1Route} />\n      <Route path=\"/build2\" component={Build2Route} />\n      <Route path=\"/torchbench-v0-nightly\" component={TorchBenchRoute} />\n      <Route exact path=\"/status\" component={Status} />\n    </div>\n  </Router>\n);\n\n//    <ul className=\"menu\">\n//      {[\n//       \"linux-trusty-py2.7-trigger\",\n//       \"linux-trusty-py2.7.9-trigger\",\n//       \"linux-trusty-py3.5-trigger\",\n//       \"linux-trusty-py3.6-gcc4.8-trigger\",\n//       \"linux-trusty-py3.6-gcc5.4-trigger\",\n//       \"linux-trusty-py3.6-gcc7.2-trigger\",\n//       \"linux-trusty-pynightly-trigger\",\n//       \"linux-xenial-cuda8-cudnn6-py3-trigger\",\n//       \"linux-xenial-cuda9-cudnn7-py2-trigger\",\n//       \"linux-xenial-cuda9-cudnn7-py3-trigger\",\n//       \"linux-xenial-py3-clang5-asan-trigger\",\n//       \"win-ws2016-cuda9-cudnn7-py3-trigger\",\n//      ].map((e) => <li key={e}><Link to={\"/build/pytorch-builds/job/pytorch-\" + e}>{e}</Link></li>)}\n//    </ul>\n\nconst Status = () => (\n  <div>\n    <GitHubActionsDisplay />\n    <JobCorrelationHeatmap />\n    <QueueDisplay interval={1000} />\n    <ComputerDisplay interval={1000} />\n  </div>\n);\n\nconst Build = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <BuildHistoryDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst Build1 = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <BuildHistoryDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build1\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst Build2 = ({ match }) => {\n  // Uhhh, am I really supposed to rob window.location here?\n  const query = new URLSearchParams(window.location.search);\n  return (\n    <GitHubStatusDisplay\n      interval={60000}\n      job={match.url.replace(/^\\/build2\\//, \"\")}\n      mode={query.get(\"mode\")}\n    />\n  );\n};\n\nconst BuildRoute = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build} />\n    <Route path={`${match.url}/:segment`} component={BuildRoute} />\n  </Fragment>\n);\n\nconst Build1Route = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build1} />\n    <Route path={`${match.url}/:segment`} component={Build1Route} />\n  </Fragment>\n);\n\nconst Build2Route = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={Build2} />\n    <Route path={`${match.url}/:segment`} component={Build2Route} />\n  </Fragment>\n);\n\nconst TorchBenchRoute = ({ match }) => (\n  <Fragment>\n    <Route exact path={match.url} component={PerfHistoryDisplay} />\n  </Fragment>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}